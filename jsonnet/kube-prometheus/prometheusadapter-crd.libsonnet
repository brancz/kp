{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.4.1"},"creationTimestamp":null,"name":"prometheusadapters.monitoring.prometheus-operator.dev"},"spec":{"group":"monitoring.prometheus-operator.dev","names":{"kind":"PrometheusAdapter","listKind":"PrometheusAdapterList","plural":"prometheusadapters","singular":"prometheusadapter"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"properties":{"config":{"description":"Configuration of prometheus-adapter in the same form as in","properties":{"externalRules":{"items":{"description":"DiscoveryRule describes a set of rules for transforming Prometheus metrics to/from custom metrics API resources.","properties":{"metricsQuery":{"description":"MetricsQuery specifies modifications to the metrics query, such as converting cumulative metrics to rate metrics.  It is a template where `.LabelMatchers` is a the comma-separated base label matchers and `.Series` is the series name, and `.GroupBy` is the comma-separated expected group-by label names. The delimeters are `\u003c\u003c` and `\u003e\u003e`.","type":"string"},"name":{"description":"Name specifies how the metric name should be transformed between custom metric API resources, and Prometheus metric names.","properties":{"as":{"description":"As is the name used in the API.  Captures from Matches are available for use here.  If not specified, it defaults to $0 if no capture groups are present in Matches, or $1 if only one is present, and will error if multiple are.","type":"string"},"matches":{"description":"Matches is a regular expression that is used to match Prometheus series names.  It may be left blank, in which case it is equivalent to `.*`.","type":"string"}},"required":["as","matches"],"type":"object"},"resources":{"description":"Resources specifies how associated Kubernetes resources should be discovered for the given metrics.","properties":{"overrides":{"additionalProperties":{"description":"GroupResource represents a Kubernetes group-resource.","properties":{"group":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"description":"Overrides specifies exceptions to the above template, mapping label names to group-resources","type":"object"},"template":{"description":"Template specifies a golang string template for converting a Kubernetes group-resource to a Prometheus label.  The template object contains the `.Group` and `.Resource` fields.  The `.Group` field will have dots replaced with underscores, and the `.Resource` field will be singularized.  The delimiters are `\u003c\u003c` and `\u003e\u003e`.","type":"string"}},"type":"object"},"seriesFilters":{"description":"SeriesFilters specifies additional regular expressions to be applied on the series names returned from the query.  This is useful for constraints that can't be represented in the SeriesQuery (e.g. series matching `container_.+` not matching `container_.+_total`.  A filter will be automatically appended to match the form specified in Name.","items":{"description":"RegexFilter is a filter that matches positively or negatively against a regex. Only one field may be set at a time.","properties":{"is":{"type":"string"},"isNot":{"type":"string"}},"type":"object"},"type":"array"},"seriesQuery":{"description":"SeriesQuery specifies which metrics this rule should consider via a Prometheus query series selector query.","type":"string"}},"required":["name","resources","seriesFilters","seriesQuery"],"type":"object"},"type":"array"},"resourceRules":{"description":"ResourceRules describe the rules for querying resource metrics API results.  It's assumed that the same metrics can be used to aggregate across different resources.","properties":{"cpu":{"description":"ResourceRule describes how to query metrics for some particular system resource metric.","properties":{"containerLabel":{"description":"ContainerLabel indicates the name of the Prometheus label containing the container name (since \"container\" is not a resource, this can't go in the `resources` block, but is similar).","type":"string"},"containerQuery":{"description":"Container is the query used to fetch the metrics for containers.","type":"string"},"nodeQuery":{"description":"NodeQuery is the query used to fetch the metrics for nodes (for instance, simply aggregating by node label is insufficient for cadvisor metrics -- you need to select the `/` container).","type":"string"},"resources":{"description":"Resources specifies how associated Kubernetes resources should be discovered for the given metrics.","properties":{"overrides":{"additionalProperties":{"description":"GroupResource represents a Kubernetes group-resource.","properties":{"group":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"description":"Overrides specifies exceptions to the above template, mapping label names to group-resources","type":"object"},"template":{"description":"Template specifies a golang string template for converting a Kubernetes group-resource to a Prometheus label.  The template object contains the `.Group` and `.Resource` fields.  The `.Group` field will have dots replaced with underscores, and the `.Resource` field will be singularized.  The delimiters are `\u003c\u003c` and `\u003e\u003e`.","type":"string"}},"type":"object"}},"required":["containerLabel","containerQuery","nodeQuery","resources"],"type":"object"},"memory":{"description":"ResourceRule describes how to query metrics for some particular system resource metric.","properties":{"containerLabel":{"description":"ContainerLabel indicates the name of the Prometheus label containing the container name (since \"container\" is not a resource, this can't go in the `resources` block, but is similar).","type":"string"},"containerQuery":{"description":"Container is the query used to fetch the metrics for containers.","type":"string"},"nodeQuery":{"description":"NodeQuery is the query used to fetch the metrics for nodes (for instance, simply aggregating by node label is insufficient for cadvisor metrics -- you need to select the `/` container).","type":"string"},"resources":{"description":"Resources specifies how associated Kubernetes resources should be discovered for the given metrics.","properties":{"overrides":{"additionalProperties":{"description":"GroupResource represents a Kubernetes group-resource.","properties":{"group":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"description":"Overrides specifies exceptions to the above template, mapping label names to group-resources","type":"object"},"template":{"description":"Template specifies a golang string template for converting a Kubernetes group-resource to a Prometheus label.  The template object contains the `.Group` and `.Resource` fields.  The `.Group` field will have dots replaced with underscores, and the `.Resource` field will be singularized.  The delimiters are `\u003c\u003c` and `\u003e\u003e`.","type":"string"}},"type":"object"}},"required":["containerLabel","containerQuery","nodeQuery","resources"],"type":"object"},"window":{"description":"Window is the window size reported by the resource metrics API.  It should match the value used in your containerQuery and nodeQuery if you use a `rate` function.","format":"int64","type":"integer"}},"required":["cpu","memory","window"],"type":"object"},"rules":{"description":"Rules specifies how to discover and map Prometheus metrics to custom metrics API resources.  The rules are applied independently, and thus must be mutually exclusive.  Rules with the same SeriesQuery will make only a single API call.","items":{"description":"DiscoveryRule describes a set of rules for transforming Prometheus metrics to/from custom metrics API resources.","properties":{"metricsQuery":{"description":"MetricsQuery specifies modifications to the metrics query, such as converting cumulative metrics to rate metrics.  It is a template where `.LabelMatchers` is a the comma-separated base label matchers and `.Series` is the series name, and `.GroupBy` is the comma-separated expected group-by label names. The delimeters are `\u003c\u003c` and `\u003e\u003e`.","type":"string"},"name":{"description":"Name specifies how the metric name should be transformed between custom metric API resources, and Prometheus metric names.","properties":{"as":{"description":"As is the name used in the API.  Captures from Matches are available for use here.  If not specified, it defaults to $0 if no capture groups are present in Matches, or $1 if only one is present, and will error if multiple are.","type":"string"},"matches":{"description":"Matches is a regular expression that is used to match Prometheus series names.  It may be left blank, in which case it is equivalent to `.*`.","type":"string"}},"required":["as","matches"],"type":"object"},"resources":{"description":"Resources specifies how associated Kubernetes resources should be discovered for the given metrics.","properties":{"overrides":{"additionalProperties":{"description":"GroupResource represents a Kubernetes group-resource.","properties":{"group":{"type":"string"},"resource":{"type":"string"}},"required":["resource"],"type":"object"},"description":"Overrides specifies exceptions to the above template, mapping label names to group-resources","type":"object"},"template":{"description":"Template specifies a golang string template for converting a Kubernetes group-resource to a Prometheus label.  The template object contains the `.Group` and `.Resource` fields.  The `.Group` field will have dots replaced with underscores, and the `.Resource` field will be singularized.  The delimiters are `\u003c\u003c` and `\u003e\u003e`.","type":"string"}},"type":"object"},"seriesFilters":{"description":"SeriesFilters specifies additional regular expressions to be applied on the series names returned from the query.  This is useful for constraints that can't be represented in the SeriesQuery (e.g. series matching `container_.+` not matching `container_.+_total`.  A filter will be automatically appended to match the form specified in Name.","items":{"description":"RegexFilter is a filter that matches positively or negatively against a regex. Only one field may be set at a time.","properties":{"is":{"type":"string"},"isNot":{"type":"string"}},"type":"object"},"type":"array"},"seriesQuery":{"description":"SeriesQuery specifies which metrics this rule should consider via a Prometheus query series selector query.","type":"string"}},"required":["name","resources","seriesFilters","seriesQuery"],"type":"object"},"type":"array"}},"required":["rules"],"type":"object"},"image":{"description":"Image to use for a prometheus-adapter deployment.","type":"string"},"namespace":{"description":"Namespace for a prometheus-adapter deployment.","type":"string"},"port":{"default":9100,"description":"Secure listening port","type":"integer"},"resources":{"default":{"limits":{"cpu":"250m","memory":"180Mi"},"requests":{"cpu":"102m","memory":"180Mi"}},"description":"Define resources requests and limits for each prometheus-adapter pod.","properties":{"limits":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/","type":"object"},"requests":{"additionalProperties":{"anyOf":[{"type":"integer"},{"type":"string"}],"pattern":"^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$","x-kubernetes-int-or-string":true},"description":"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/","type":"object"}},"type":"object"},"version":{"description":"Version string used for labeling objects","type":"string"}},"type":"object"}},"required":["spec"],"type":"object"}},"served":true,"storage":true}]},"status":{"acceptedNames":{"kind":"","plural":""},"conditions":[],"storedVersions":[]}}